import "https://ajax.googleapis.com/ajax/libs/model-viewer/3.3.0/model-viewer.min.js"; function tst(t) { console.log("test") } class AugmentoViewer extends HTMLElement { constructor() { super() } fetchData(t) { return new Promise((e, o) => { fetch("https://prod.augmento.com/v2/products/" + t, { method: "GET", headers: { Origin: "localhost:8080" }, redirect: "follow" }).then(t => { if (!t.ok) throw Error("Can't fetch model from augmento!"); return t.json() }).then(t => { let o = t.data; e(o) }).catch(t => { console.error("Fetch error:", t), o(t) }) }) } async connectedCallback() { this.getAttribute("model-id"); let t = this.attachShadow({ mode: "open" }), e = document.createElement("model-viewer"); e.style.height = "100%", e.style.width = "100%", e.setAttribute("src", "/models/skull.glb"), e.setAttribute("camera-controls", ""), e.setAttribute("touch-action", "pan-y"), e.setAttribute("alt", "alt caption"), e.setAttribute("shadow-intensity", "1"), e.setAttribute("reveal", "manual"), e.setAttribute("ar", ""), t.appendChild(e); let o = document.createElement("button"); o.setAttribute("slot", "ar-button"), o.style.display = "flex", o.style.flexDirection = "row", o.style.alignItems = "center", o.style.justifyContent = "center", o.style.backgroundColor = "rgb(26, 84, 192)", o.style.color = "white", o.style.borderRadius = "15px", o.style.height = "100%", o.style.width = "100%", o.style.fontSize = "1.1rem"; let l = document.createElement("span"); l.textContent = "Show in AR", o.appendChild(l), e.appendChild(o), t.appendChild(e) } disconnectedCallback() { } adoptedCallback() { } } customElements.define("augmento-viewer", AugmentoViewer);